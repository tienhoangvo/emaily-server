{"version":3,"sources":["actions/types.js","actions/index.js","components/Payments.js","components/Header.js","components/Landing.js","contexts/Surveys.js","components/surveys/SurveyList.js","components/Dashboard.js","contexts/SurveyForm.js","components/surveys/SurveyField.js","components/surveys/formFields.js","components/surveys/SurveyForm.js","components/surveys/SurveyFormReview.js","components/surveys/SurveyNew.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["FETCH_USER","console","log","fetchUser","dispatch","a","axios","get","data","type","payload","submitSurvey","surveyData","cancelToken","setRedirectToSurveys","post","dir","Payments","stripe","useStripe","handleClick","event","response","session","redirectToCheckout","sessionId","id","error","role","onClick","className","connect","auth","props","to","href","style","margin","credits","renderContent","Landing","textAlign","SurveysContext","createContext","useSurveysState","context","useContext","undefined","Error","SurveysProvider","children","useState","surveys","setSurveys","source","CancelToken","useEffect","token","res","isCancel","message","fetchSurveys","cancel","Provider","value","SurveyList","map","_id","title","body","subject","yes","no","dateSent","class","Date","toLocaleDateString","Dashboard","SurveyFormContext","useSurveyFormState","SurveyFormProvider","setSurveyData","useReducer","state","isOn","toggleIsON","SurveyField","inputName","labelName","register","inputId","trim","toLowerCase","split","join","marginBottom","for","name","ref","defaultValue","data-error","data-success","Array","isArray","reduce","prev","curr","FIELDS","schema","yup","shape","required","recipients","transform","originalValue","this","isType","min","of","email","SurveyForm","useForm","mode","resolver","yupResolver","handleSubmit","formState","touched","errors","isValid","isDirty","onSubmit","field","disabled","actions","redirectToSurveys","cancelTokenSource","inputValue","length","SurveyNew","stripePromise","loadStripe","process","path","combineReducers","action","window","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d215c4a.chunk.js","sourcesContent":["export const FETCH_USER = 'fetch_user';\r\n","import axios from 'axios';\r\n\r\nimport { FETCH_USER } from './types';\r\n\r\nconsole.log({ FETCH_USER });\r\n\r\nexport const fetchUser = () => async (\r\n  dispatch\r\n) => {\r\n  const { data } = await axios.get(\r\n    '/api/users/current-user'\r\n  );\r\n\r\n  dispatch({\r\n    type: FETCH_USER,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const submitSurvey = (\r\n  surveyData,\r\n  cancelToken,\r\n  setRedirectToSurveys\r\n) => async (dispatch) => {\r\n  try {\r\n    const { data } = await axios.post(\r\n      '/api/surveys',\r\n      {\r\n        ...surveyData,\r\n        cancelToken,\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: FETCH_USER,\r\n      payload: data,\r\n    });\r\n\r\n    setRedirectToSurveys(true);\r\n  } catch (error) {\r\n    console.dir(error);\r\n    throw error;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { useStripe } from '@stripe/react-stripe-js';\r\n\r\nconst Payments = () => {\r\n  // Get Stripe.js instance\r\n  const stripe = useStripe();\r\n  const handleClick = async (event) => {\r\n    // Call your backend to create the Checkout Session\r\n    const response = await axios.get(\r\n      '/api/billings/get-checkout-session'\r\n    );\r\n\r\n    const session = response.data;\r\n\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const result = await stripe.redirectToCheckout(\r\n      {\r\n        sessionId: session.id,\r\n      }\r\n    );\r\n\r\n    if (result.error) {\r\n      // If `redirectToCheckout` fails due to a browser or network\r\n      // error, display the localized error message to your customer\r\n      // using `result.error.message`.\r\n    }\r\n  };\r\n  return (\r\n    <button\r\n      role=\"link\"\r\n      onClick={handleClick}\r\n      className=\"btn\"\r\n    >\r\n      Add credits\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Payments from './Payments';\r\n\r\nconst Header = (props) => {\r\n  const renderContent = () => {\r\n    switch (props.auth) {\r\n      case null:\r\n        return;\r\n      case false:\r\n        return (\r\n          <li>\r\n            <a href=\"/auth/google\">\r\n              Login with Google\r\n            </a>\r\n          </li>\r\n        );\r\n      default:\r\n        return (\r\n          <>\r\n            <li>\r\n              <Payments />\r\n            </li>\r\n            <li style={{ margin: '0 10px' }}>\r\n              Credits: {props.auth.credits}\r\n            </li>\r\n            <li>\r\n              <a href=\"/auth/logout\">Logout</a>\r\n            </li>\r\n          </>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper\">\r\n        <div className=\"col s12\">\r\n          <Link\r\n            className=\"brand-logo left\"\r\n            to={props.auth ? '/surveys' : '/'}\r\n          >\r\n            Emaily\r\n          </Link>\r\n          <ul className=\"right\">\r\n            {renderContent()}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from 'react';\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h1>Emaily!</h1>\r\n      <p>Collect feed back from your users</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import axios from 'axios';\r\nimport {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n} from 'react';\r\n\r\nconst SurveysContext = createContext();\r\n\r\nexport const useSurveysState = () => {\r\n  const context = useContext(SurveysContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      'useSurveysState must be used within a SurveysProvider'\r\n    );\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport const SurveysProvider = ({ children }) => {\r\n  const [surveys, setSurveys] = useState();\r\n\r\n  const source = axios.CancelToken.source();\r\n\r\n  useEffect(() => {\r\n    const fetchSurveys = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          '/api/surveys',\r\n          {\r\n            cancelToken: source.token,\r\n          }\r\n        );\r\n\r\n        setSurveys(res.data);\r\n      } catch (error) {\r\n        if (axios.isCancel(error)) {\r\n          console.log(\r\n            'Request canceled',\r\n            error.message\r\n          );\r\n        } else console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchSurveys();\r\n\r\n    return () => {\r\n      source.cancel(\r\n        'Operation cancled by the user'\r\n      );\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <SurveysContext.Provider value={{ surveys }}>\r\n      {children}\r\n    </SurveysContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSurveysState } from '../../contexts/Surveys';\r\n\r\nconst SurveyList = () => {\r\n  const { surveys } = useSurveysState();\r\n  console.log(surveys);\r\n  return (\r\n    <div>\r\n      {surveys &&\r\n        surveys.map(\r\n          ({\r\n            _id,\r\n            title,\r\n            subject,\r\n            body,\r\n            yes,\r\n            no,\r\n            dateSent,\r\n          }) => {\r\n            return (\r\n              <div\r\n                class=\"card blue-grey darken-1\"\r\n                key={_id}\r\n              >\r\n                <div class=\"card-content white-text\">\r\n                  <span class=\"card-title\">\r\n                    {title}\r\n                  </span>\r\n                  <p>{body}</p>\r\n                  <p className=\"right ita\">\r\n                    Sent on:{' '}\r\n                    {(dateSent\r\n                      ? new Date(dateSent)\r\n                      : new Date()\r\n                    ).toLocaleDateString()}\r\n                  </p>\r\n                </div>\r\n                <div class=\"card-action\">\r\n                  <a>YES: {yes}</a>\r\n                  <a>NO: {no}</a>\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SurveyList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SurveyList from './surveys/SurveyList';\r\nimport { useSurveysState } from '../contexts/Surveys';\r\n\r\nconst Dashboard = () => {\r\n  const { surveys } = useSurveysState();\r\n  return (\r\n    <div>\r\n      <SurveyList surveys={surveys} />\r\n      <div className=\"fixed-action-btn\">\r\n        <Link\r\n          to=\"/surveys/new/\"\r\n          className=\"btn-floating btn-large red\"\r\n        >\r\n          <i className=\"large material-icons\">\r\n            add\r\n          </i>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import axios from 'axios';\r\nimport {\r\n  createContext,\r\n  useContext,\r\n  useReducer,\r\n  useState,\r\n} from 'react';\r\n\r\nconst SurveyFormContext = createContext();\r\n\r\nexport const useSurveyFormState = () => {\r\n  const context = useContext(SurveyFormContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      'useSurveyFormState must be used within a SurveyFormProvider'\r\n    );\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport const SurveyFormProvider = ({\r\n  children,\r\n}) => {\r\n  const [surveyData, setSurveyData] = useState(\r\n    {}\r\n  );\r\n\r\n  const [isOn, toggleIsON] = useReducer(\r\n    (state) => !state,\r\n    false\r\n  );\r\n\r\n  return (\r\n    <SurveyFormContext.Provider\r\n      value={{\r\n        isOn,\r\n        toggleIsON,\r\n        surveyData,\r\n        setSurveyData,\r\n      }}\r\n    >\r\n      {children}\r\n    </SurveyFormContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSurveyFormState } from '../../contexts/SurveyForm';\r\n\r\nconst SurveyField = ({\r\n  inputName,\r\n  labelName,\r\n  register,\r\n  error,\r\n}) => {\r\n  const inputId = labelName\r\n    .trim()\r\n    .toLowerCase()\r\n    .split(' ')\r\n    .join('-');\r\n\r\n  const { surveyData } = useSurveyFormState();\r\n\r\n  console.log(surveyData);\r\n  return (\r\n    <div style={{ marginBottom: '10px' }}>\r\n      <label for={inputId}>{labelName}</label>\r\n      <input\r\n        id={inputId}\r\n        name={inputName}\r\n        type=\"text\"\r\n        ref={register}\r\n        defaultValue={surveyData[inputName]}\r\n      />\r\n      {error && (\r\n        <span\r\n          className=\"red-text\"\r\n          data-error=\"right\"\r\n          data-success=\"wrong\"\r\n          role=\"alert\"\r\n        >\r\n          {Array.isArray(error)\r\n            ? error.reduce(\r\n                (prev, curr) =>\r\n                  curr\r\n                    ? !prev\r\n                      ? curr.message\r\n                      : `${prev}, ${curr.message}`\r\n                    : prev,\r\n                ''\r\n              )\r\n            : error.message}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SurveyField;\r\n","const FIELDS = [\r\n  {\r\n    labelName: 'Survey title',\r\n    inputName: 'title',\r\n  },\r\n  {\r\n    labelName: 'Subject line',\r\n    inputName: 'subject',\r\n  },\r\n\r\n  {\r\n    labelName: 'Email body',\r\n    inputName: 'body',\r\n  },\r\n  {\r\n    labelName: 'Recipient list',\r\n    inputName: 'recipients',\r\n  },\r\n];\r\n\r\nexport default FIELDS;\r\n","import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport SurveyField from './SurveyField';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSurveyFormState } from '../../contexts/SurveyForm';\r\nimport FIELDS from './formFields';\r\nconst schema = yup.object().shape({\r\n  title: yup.string().required().trim(),\r\n  subject: yup.string().required().trim(),\r\n  body: yup.string().required().trim(),\r\n  recipients: yup\r\n    .array()\r\n    .transform(function (value, originalValue) {\r\n      if (this.isType(value) && value !== null) {\r\n        return value;\r\n      }\r\n      return originalValue\r\n        ? originalValue.split(/[\\s,]+/)\r\n        : [];\r\n    })\r\n    .min(1)\r\n    .of(\r\n      yup\r\n        .string()\r\n        .trim()\r\n        .email(\r\n          ({ value }) =>\r\n            `${value} is not a valid email`\r\n        )\r\n    ),\r\n});\r\n\r\nconst SurveyForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm({\r\n    mode: 'all',\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const {\r\n    surveyData,\r\n    setSurveyData,\r\n    toggleIsON,\r\n  } = useSurveyFormState();\r\n  console.log({ surveyData, setSurveyData });\r\n  const onSubmit = (data) => {\r\n    setSurveyData(data);\r\n    toggleIsON();\r\n  };\r\n\r\n  console.log('--RENDER');\r\n\r\n  useEffect(() => {\r\n    console.log('-- Touched', formState.touched);\r\n    console.log('-- Errors', formState.errors);\r\n    console.log('-- Is valid', formState.isValid);\r\n    console.log('-- Is Dirty', formState.isDirty);\r\n  }, [formState]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {FIELDS.map((field) => (\r\n        <SurveyField\r\n          {...field}\r\n          error={\r\n            formState.errors[field.inputName]\r\n          }\r\n          register={register}\r\n        />\r\n      ))}\r\n\r\n      <Link\r\n        to=\"/surveys\"\r\n        className=\"btn-flat red white-text left\"\r\n      >\r\n        Cancel\r\n      </Link>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        disabled={!formState.isValid}\r\n        className=\"btn-flat teal white-text right\"\r\n      >\r\n        Next\r\n        <i className=\"material-icons right\">\r\n          navigate_next\r\n        </i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SurveyForm;\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport { useSurveyFormState } from '../../contexts/SurveyForm';\r\nimport FIELDS from './formFields';\r\nimport * as actions from '../../actions';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SurveyFormReview = (props) => {\r\n  const {\r\n    toggleIsON,\r\n    surveyData,\r\n  } = useSurveyFormState();\r\n\r\n  const [\r\n    redirectToSurveys,\r\n    setRedirectToSurveys,\r\n  ] = useState(false);\r\n\r\n  const cancelTokenSource = axios.CancelToken.source();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      await props.submitSurvey(\r\n        surveyData,\r\n        cancelTokenSource.token,\r\n        setRedirectToSurveys\r\n      );\r\n\r\n      setRedirectToSurveys(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log('cancel token');\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, []);\r\n\r\n  if (redirectToSurveys)\r\n    return <Redirect to=\"/surveys\" />;\r\n\r\n  return (\r\n    <div>\r\n      <h5>Please confirm your entries</h5>\r\n\r\n      {FIELDS.map(({ labelName, inputName }) => {\r\n        const inputValue = surveyData[inputName];\r\n\r\n        return (\r\n          <div>\r\n            <label>{labelName}</label>\r\n            <div>\r\n              {Array.isArray(inputValue) &&\r\n              inputValue.length > 1\r\n                ? inputValue.join(', ')\r\n                : inputValue}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <button\r\n        className=\"btn-flat yellow dark-text left\"\r\n        onClick={() => toggleIsON()}\r\n      >\r\n        <i className=\"material-icons left\">\r\n          navigate_before\r\n        </i>\r\n        BACK\r\n      </button>\r\n\r\n      <button\r\n        className=\"btn-flat teal white-text right\"\r\n        onClick={onSubmit}\r\n      >\r\n        Send\r\n        <i className=\"material-icons right\">\r\n          send\r\n        </i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  actions\r\n)(SurveyFormReview);\r\n","import React, { useReducer } from 'react';\r\nimport { useSurveyFormState } from '../../contexts/SurveyForm';\r\nimport SurveyForm from './SurveyForm';\r\nimport SurveyFormReview from './SurveyFormReview';\r\n\r\nconst SurveyNew = () => {\r\n  const { isOn } = useSurveyFormState();\r\n  return (\r\n    <div>\r\n      {isOn ? (\r\n        <SurveyFormReview />\r\n      ) : (\r\n        <SurveyForm />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SurveyNew;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\nimport * as actions from '../actions';\r\n\r\nimport Header from './Header';\r\nimport Landing from './Landing';\r\nimport Dashboard from './Dashboard';\r\nimport SurveyNew from './surveys/SurveyNew';\r\nimport { SurveyFormProvider } from '../contexts/SurveyForm';\r\nimport { SurveysProvider } from '../contexts/Surveys';\r\nconst stripePromise = loadStripe(\r\n  process.env.REACT_APP_STRIPE_KEY\r\n);\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    props.fetchUser();\r\n  }, [props]);\r\n\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Router>\r\n            <div>\r\n              <Header />\r\n              <Switch>\r\n                <Route path=\"/surveys/new\">\r\n                  <SurveyFormProvider>\r\n                    <SurveyNew />\r\n                  </SurveyFormProvider>\r\n                </Route>\r\n                <Route path=\"/surveys\">\r\n                  <SurveysProvider>\r\n                    <Dashboard />\r\n                  </SurveysProvider>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Landing />\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </Router>\r\n        </div>\r\n      </div>\r\n    </Elements>\r\n  );\r\n};\r\n\r\nexport default connect(null, actions)(App);\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n});\r\n","import { FETCH_USER } from '../actions/types';\r\n\r\nexport default function authReducer(\r\n  state = null,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n      return action.payload || false;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import 'materialize-css/dist/css/materialize.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {\n  createStore,\n  applyMiddleware,\n} from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nimport axios from 'axios';\nwindow.axios = axios;\n\nconst store = createStore(\n  reducers,\n  {},\n  applyMiddleware(reduxThunk)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nconsole.log(\n  'STRIPE KEY IS: ',\n  process.env.REACT_APP_STRIPE_KEY\n);\n\nconsole.log('ENV: ', process.env.NODE_ENV);\n"],"sourceRoot":""}