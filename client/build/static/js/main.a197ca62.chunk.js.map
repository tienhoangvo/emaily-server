{"version":3,"sources":["actions/types.js","actions/index.js","components/Payments.js","components/Header.js","components/Landing.js","components/Dashboard.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["FETCH_USER","console","log","fetchUser","dispatch","a","axios","get","data","type","payload","Payments","stripe","useStripe","handleClick","event","response","session","redirectToCheckout","sessionId","id","error","role","onClick","className","connect","auth","props","to","href","style","margin","credits","renderContent","Landing","textAlign","Dashboard","stripePromise","loadStripe","process","actions","useEffect","path","combineReducers","state","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"oSAAaA,EAAa,aCI1BC,QAAQC,IAAI,CAAEF,eAEP,IAAMG,EAAY,yDAAM,WAC7BC,GAD6B,iBAAAC,EAAA,sEAGNC,IAAMC,IAC3B,2BAJ2B,gBAGrBC,EAHqB,EAGrBA,KAIRJ,EAAS,CACPK,KAAMT,EACNU,QAASF,IATkB,2CAAN,uD,OCiCVG,EAnCE,WAEf,IAAMC,EAASC,sBACTC,EAAW,uCAAG,WAAOC,GAAP,iBAAAV,EAAA,sEAEKC,IAAMC,IAC3B,sCAHgB,cAEZS,EAFY,OAMZC,EAAUD,EAASR,KANP,SASGI,EAAOM,mBAC1B,CACEC,UAAWF,EAAQG,KAXL,cAePC,MAfO,2CAAH,sDAqBjB,OACE,wBACEC,KAAK,OACLC,QAAST,EACTU,UAAU,MAHZ,0BC6BWC,mBAJf,YACE,MAAO,CAAEC,KADwB,EAARA,QAIZD,EArDA,SAACE,GA8Bd,OACE,8BACE,qBAAKH,UAAU,cAAf,SACE,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CACEA,UAAU,kBACVI,GAAID,EAAMD,KAAO,WAAa,IAFhC,oBAMA,oBAAIF,UAAU,QAAd,SAvCc,WACpB,OAAQG,EAAMD,MACZ,KAAK,KACH,OACF,KAAK,EACH,OACE,6BACE,mBAAGG,KAAK,eAAR,iCAKN,QACE,OACE,qCACE,6BACE,cAAC,EAAD,MAEF,qBAAIC,MAAO,CAAEC,OAAQ,UAArB,sBACYJ,EAAMD,KAAKM,WAEvB,6BACE,mBAAGH,KAAK,eAAR,0BAkBDI,eCnCEC,EATC,WACd,OACE,sBAAKJ,MAAO,CAAEK,UAAW,UAAzB,UACE,yCACA,sECASC,EAJG,WAChB,OAAO,4CCeHC,EAAgBC,YACpBC,+GA+Bad,cAAQ,KAAMe,EAAdf,EA5BH,SAACE,GAKX,OAJAc,qBAAU,WACRd,EAAMxB,cACL,IAGD,cAAC,WAAD,CAAUS,OAAQyB,EAAlB,SACE,qBAAKb,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkB,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,uBCpCHC,kBAAgB,CAC7BjB,KCFa,WAGZ,IAFDkB,EAEA,uDAFQ,KACRC,EACA,uCACA,OAAQA,EAAOpC,MACb,KAAKT,EACH,OAAO6C,EAAOnC,UAAW,EAC3B,QACE,OAAOkC,MCGPE,EAAQC,YACZC,EACA,GACAC,YAAgBC,MAGlBC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,SAG1BrD,QAAQC,IACN,kBACAqC,+GAGFtC,QAAQC,IAAI,QAASqC,gB","file":"static/js/main.a197ca62.chunk.js","sourcesContent":["export const FETCH_USER = 'fetch_user';\r\n","import axios from 'axios';\r\n\r\nimport { FETCH_USER } from './types';\r\n\r\nconsole.log({ FETCH_USER });\r\n\r\nexport const fetchUser = () => async (\r\n  dispatch\r\n) => {\r\n  const { data } = await axios.get(\r\n    '/api/users/current-user'\r\n  );\r\n\r\n  dispatch({\r\n    type: FETCH_USER,\r\n    payload: data,\r\n  });\r\n};\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { useStripe } from '@stripe/react-stripe-js';\r\n\r\nconst Payments = () => {\r\n  // Get Stripe.js instance\r\n  const stripe = useStripe();\r\n  const handleClick = async (event) => {\r\n    // Call your backend to create the Checkout Session\r\n    const response = await axios.get(\r\n      '/api/billings/get-checkout-session'\r\n    );\r\n\r\n    const session = response.data;\r\n\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const result = await stripe.redirectToCheckout(\r\n      {\r\n        sessionId: session.id,\r\n      }\r\n    );\r\n\r\n    if (result.error) {\r\n      // If `redirectToCheckout` fails due to a browser or network\r\n      // error, display the localized error message to your customer\r\n      // using `result.error.message`.\r\n    }\r\n  };\r\n  return (\r\n    <button\r\n      role=\"link\"\r\n      onClick={handleClick}\r\n      className=\"btn\"\r\n    >\r\n      Add credits\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Payments from './Payments';\r\n\r\nconst Header = (props) => {\r\n  const renderContent = () => {\r\n    switch (props.auth) {\r\n      case null:\r\n        return;\r\n      case false:\r\n        return (\r\n          <li>\r\n            <a href=\"/auth/google\">\r\n              Login with Google\r\n            </a>\r\n          </li>\r\n        );\r\n      default:\r\n        return (\r\n          <>\r\n            <li>\r\n              <Payments />\r\n            </li>\r\n            <li style={{ margin: '0 10px' }}>\r\n              Credits: {props.auth.credits}\r\n            </li>\r\n            <li>\r\n              <a href=\"/auth/logout\">Logout</a>\r\n            </li>\r\n          </>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper\">\r\n        <div className=\"col s12\">\r\n          <Link\r\n            className=\"brand-logo left\"\r\n            to={props.auth ? '/surveys' : '/'}\r\n          >\r\n            Emaily\r\n          </Link>\r\n          <ul className=\"right\">\r\n            {renderContent()}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from 'react';\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h1>Emaily!</h1>\r\n      <p>Collect feed back from your users</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\n\r\nconst Dashboard = () => {\r\n  return <h1>Dashboard</h1>;\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\nimport * as actions from '../actions';\r\n\r\nimport Header from './Header';\r\nimport Landing from './Landing';\r\nimport Dashboard from './Dashboard';\r\nconst SurveyNew = () => <h2>ServeyNew</h2>;\r\nconst stripePromise = loadStripe(\r\n  process.env.REACT_APP_STRIPE_KEY\r\n);\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    props.fetchUser();\r\n  }, []);\r\n\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Router>\r\n            <div>\r\n              <Header />\r\n              <Switch>\r\n                <Route path=\"/surveys\">\r\n                  <Dashboard />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Landing />\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </Router>\r\n        </div>\r\n      </div>\r\n    </Elements>\r\n  );\r\n};\r\n\r\nexport default connect(null, actions)(App);\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n});\r\n","import { FETCH_USER } from '../actions/types';\r\n\r\nexport default function authReducer(\r\n  state = null,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n      return action.payload || false;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import 'materialize-css/dist/css/materialize.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {\n  createStore,\n  applyMiddleware,\n} from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(\n  reducers,\n  {},\n  applyMiddleware(reduxThunk)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nconsole.log(\n  'STRIPE KEY IS: ',\n  process.env.REACT_APP_STRIPE_KEY\n);\n\nconsole.log('ENV: ', process.env.NODE_ENV);\n"],"sourceRoot":""}